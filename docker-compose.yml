version: '3'

services:
  backend:
    container_name: proxychunk-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    networks:
      - proxychunk
    depends_on:
      - db
    ports:
      - "4000:4000"
    environment:
      ADMIN_ACCESS_CODE: ${ADMIN_ACCESS_CODE}
      CORS_ORIGIN: ${CORS_ORIGIN}
      NODE_ENV: production
      POSTGRES_HOST: db
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: proxychunk
    deploy:
      resources:
        limits:
          cpus: '0.75'
        reservations:
          cpus: '0.25'

  frontend:
    container_name: proxychunk-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
#        - NODE_ENV=production
        - REACT_APP_API_ENDPOINT=${REACT_APP_API_ENDPOINT}
    networks:
      - proxychunk
    depends_on:
      - backend
      - db
    ports:
      - "3000:80"
    environment:
      NGINX_ENTRYPOINT_QUIET_LOGS: 1

  db:
    container_name: proxychunk-pg
    image: postgres:alpine
    restart: always
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: proxychunk
    ports:
      - "5432:5432"
    networks:
      - proxychunk

networks:
  proxychunk:
    ipam:
      driver: default
      config:
        - subnet: 172.69.0.0/24

volumes:
  postgres: